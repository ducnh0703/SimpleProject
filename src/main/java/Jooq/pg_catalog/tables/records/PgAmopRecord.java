/**
 * This class is generated by jOOQ
 */
package Jooq.pg_catalog.tables.records;


import Jooq.pg_catalog.tables.PgAmop;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmopRecord extends TableRecordImpl<PgAmopRecord> implements Record9<Long, Long, Long, Long, Short, String, Long, Long, Long> {

    private static final long serialVersionUID = 474184295;

    /**
     * Setter for <code>pg_catalog.pg_amop.oid</code>.
     */
    public void setOid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.oid</code>.
     */
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopfamily</code>.
     */
    public void setAmopfamily(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopfamily</code>.
     */
    public Long getAmopfamily() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoplefttype</code>.
     */
    public void setAmoplefttype(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoplefttype</code>.
     */
    public Long getAmoplefttype() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoprighttype</code>.
     */
    public void setAmoprighttype(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoprighttype</code>.
     */
    public Long getAmoprighttype() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopstrategy</code>.
     */
    public void setAmopstrategy(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopstrategy</code>.
     */
    public Short getAmopstrategy() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoppurpose</code>.
     */
    public void setAmoppurpose(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoppurpose</code>.
     */
    public String getAmoppurpose() {
        return (String) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopopr</code>.
     */
    public void setAmopopr(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopopr</code>.
     */
    public Long getAmopopr() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopmethod</code>.
     */
    public void setAmopmethod(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopmethod</code>.
     */
    public Long getAmopmethod() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopsortfamily</code>.
     */
    public void setAmopsortfamily(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopsortfamily</code>.
     */
    public Long getAmopsortfamily() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, Long, Long, Long, Short, String, Long, Long, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, Long, Long, Long, Short, String, Long, Long, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PgAmop.PG_AMOP.OID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return PgAmop.PG_AMOP.AMOPFAMILY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return PgAmop.PG_AMOP.AMOPLEFTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return PgAmop.PG_AMOP.AMOPRIGHTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return PgAmop.PG_AMOP.AMOPSTRATEGY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return PgAmop.PG_AMOP.AMOPPURPOSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return PgAmop.PG_AMOP.AMOPOPR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return PgAmop.PG_AMOP.AMOPMETHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return PgAmop.PG_AMOP.AMOPSORTFAMILY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getOid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getAmopfamily();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getAmoplefttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getAmoprighttype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getAmopstrategy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getAmoppurpose();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getAmopopr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getAmopmethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getAmopsortfamily();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value1(Long value) {
        setOid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value2(Long value) {
        setAmopfamily(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value3(Long value) {
        setAmoplefttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value4(Long value) {
        setAmoprighttype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value5(Short value) {
        setAmopstrategy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value6(String value) {
        setAmoppurpose(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value7(Long value) {
        setAmopopr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value8(Long value) {
        setAmopmethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord value9(Long value) {
        setAmopsortfamily(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmopRecord values(Long value1, Long value2, Long value3, Long value4, Short value5, String value6, Long value7, Long value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgAmopRecord
     */
    public PgAmopRecord() {
        super(PgAmop.PG_AMOP);
    }

    /**
     * Create a detached, initialised PgAmopRecord
     */
    public PgAmopRecord(Long oid, Long amopfamily, Long amoplefttype, Long amoprighttype, Short amopstrategy, String amoppurpose, Long amopopr, Long amopmethod, Long amopsortfamily) {
        super(PgAmop.PG_AMOP);

        set(0, oid);
        set(1, amopfamily);
        set(2, amoplefttype);
        set(3, amoprighttype);
        set(4, amopstrategy);
        set(5, amoppurpose);
        set(6, amopopr);
        set(7, amopmethod);
        set(8, amopsortfamily);
    }
}
